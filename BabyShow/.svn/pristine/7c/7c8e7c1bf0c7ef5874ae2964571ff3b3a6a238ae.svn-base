package com.yyqq.code.main;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.TabActivity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.view.GestureDetector.SimpleOnGestureListener;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TabHost;
import android.widget.TabHost.OnTabChangeListener;
import android.widget.TextView;

import com.ab.util.AbStrUtil;
import com.umeng.analytics.MobclickAgent;
import com.umeng.update.UmengDownloadListener;
import com.umeng.update.UmengUpdateAgent;
import com.yyqq.babyshow.R;
import com.yyqq.code.business.BusinessList;
import com.yyqq.code.grow.GrowActivity;
import com.yyqq.code.photo.CropImage;
import com.yyqq.code.photo.PhotoEdit;
import com.yyqq.commen.service.SystemService;
import com.yyqq.commen.utils.BimpUtil;
import com.yyqq.commen.utils.Config;
import com.yyqq.commen.utils.GPSLocationUtils;
import com.yyqq.commen.utils.ImageViewAnimationUtil;
import com.yyqq.commen.view.MyTabHost;

public class MainTab extends TabActivity {
	public static String TAG = "MainTab";
	public static MainTab instance;
	private FrameLayout frameLayout;
	private static int IMAGE_CAMERA_RESULT = 1;
	private static int IMAGE_IMAGE_RESULT = 2;
	private static int IMAGE_CROP_RESULT = 3;
	private static int IMAGE_CROP_RETURN = 4;
	public static boolean imgBoolean = false;

	private HomeKeyEventBroadCastReceiver receiver;
	private AlertDialog.Builder dialog;

	public static RelativeLayout add_xiuxiu_dialog;
	public static RelativeLayout tab_add_cancel;
	public static ImageView tab_add_xiuxiu;
	public static ImageView tab_add_huati;

	@Override
	public void onCreate(Bundle b) {
		super.onCreate(b);
//		  //透明状态栏  
//        getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);  
//        //透明导航栏  
//        getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);  
		instance = this;
		if (!Config.isConn(instance)) {
			this.showDialog(instance);
		}
		Config.setActivityState(this);
		setContentView(R.layout.main_page);
		initAddXiuxiuDialog();
		// 友盟自动更新
		UmengUpdateAgent.update(this);
		UmengUpdateAgent.setUpdateOnlyWifi(false);
		UmengUpdateAgent.setDownloadListener(new UmengDownloadListener() {
			@Override
			public void OnDownloadEnd(int arg0, String arg1) {
			}

			@Override
			public void OnDownloadStart() {
			}

			@Override
			public void OnDownloadUpdate(int arg0) {
			}
		});
		tabHost = (MyTabHost) findViewById(android.R.id.tabhost);
		setTabs();
		receiver = new HomeKeyEventBroadCastReceiver();
		getApplicationContext().registerReceiver(receiver,
				new IntentFilter(Intent.ACTION_CLOSE_SYSTEM_DIALOGS));
		frameLayout = tabHost.getTabContentView();
		currentTabID = getIntent().getIntExtra("tabid", 0);
		if (currentTabID != 0) {
			tabHost.setCurrentTab(currentTabID);
		}

	}

	@Override
	protected void onStart() {
		super.onStart();
		tabHost.setOnTabChangedListener(new OnTabChangeListener() {

			@Override
			public void onTabChanged(String arg0) {
				BimpUtil.drr.clear();
				BimpUtil.time.clear();
				BimpUtil.bmp.clear();
				BimpUtil.max = 0;
				PhotoEdit.imgUris = "";
			}
		});
	}

	class HomeKeyEventBroadCastReceiver extends BroadcastReceiver {
		static final String SYSTEM_REASON = "reason";
		static final String SYSTEM_HOME_KEY = "homekey";// home key
		static final String SYSTEM_RECENT_APPS = "recentapps";// long home key

		@Override
		public void onReceive(Context context, Intent intent) {
			String action = intent.getAction();
		}
	}

	public Handler handler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 1:
				newMessage.setVisibility(TextView.VISIBLE);
				break;
			}
		};
	};

	public void showNew() {
		Message msg2 = handler.obtainMessage();
		msg2.what = 1;
		msg2.sendToTarget();
		SharedPreferences sp = instance.getSharedPreferences(
				"babyshow_system_count", Context.MODE_PRIVATE);
		newMessage.setText(sp.getInt("notice", 0) + "");
	}

	/** 记录当前分页ID */
	private int currentTabID = 0;

	private class TabHostTouch extends SimpleOnGestureListener {
		/** 滑动翻页所需距离 */
		private static final int ON_TOUCH_DISTANCE = 200;

		@Override
		public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
				float velocityY) {
			if (e1.getX() - e2.getX() <= (-ON_TOUCH_DISTANCE)) {
				currentTabID = tabHost.getCurrentTab() - 1;
				if (currentTabID < 0) {
					currentTabID = tabHost.getTabCount() - 1;
				}
			} else if (e1.getX() - e2.getX() >= ON_TOUCH_DISTANCE) {
				currentTabID = tabHost.getCurrentTab() + 1;
				if (currentTabID >= tabHost.getTabCount()) {
					currentTabID = 0;
				}
			}
			tabHost.setCurrentTab(currentTabID);
			return true;
		}
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		return Config.onKeyDown(keyCode, event, this);
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
	}

	public void setTabs() {
		addTab("myshow", R.drawable.main_home_select, "首页", GoodLife.class);
		addTab("play", R.drawable.main_play_select, "学与玩", BusinessList.class);
		addTab("add", R.drawable.main_tab_abb, null, AddCheckActivity.class);
		addTab("photo", R.drawable.main_record_select, "记录", GrowActivity.class);
		// addTab("buy", R.drawable.buy_select_style, "值得买", BuyActivity.class);
		// addTab("post", R.drawable.post_select_style, "热点",
		// PostBarActivity.class);
		addTab("index", R.drawable.main_my_select, "我的", MyIndex.class);
		tabHost.setOpenAnimation(true);
	}

	public MyTabHost tabHost;

	public void addTab(String tag, int drawableID, String name, Class<?> c) {
		Intent intent = new Intent(this, c);
		intent.putExtra("visitor", getIntent().getStringExtra("visitor"));
		intent.putExtra("toMyShow", getIntent().getIntExtra("toMyShow", -1));
		intent.putExtra("lat", GPSLocationUtils.getLatitude(instance));
		intent.putExtra("lon", GPSLocationUtils.getLongitude(instance));
		TabHost.TabSpec spec = tabHost.newTabSpec(tag);
		View tabIndicator = LayoutInflater.from(this).inflate(
				R.layout.main_pag_tab, getTabWidget(), false);
		ImageView icon = (ImageView) tabIndicator.findViewById(R.id.icon);
		TextView icon_name = (TextView) tabIndicator
				.findViewById(R.id.icon_name);
		icon.setBackgroundDrawable(getResources().getDrawable(drawableID));
		icon_name.setText(name);
		// icon_name.setShadowLayer(1F, 1F, 0F, R.color.yinying);
		spec.setIndicator(tabIndicator);
		spec.setContent(intent);
		if (tag.equals("index")) {
			newMessage = (TextView) tabIndicator.findViewById(R.id.title);
		}
		tabHost.addTab(spec);
	}

	TextView newMessage;
	public OnTouchListener UploadTouch = new OnTouchListener() {
		@Override
		public boolean onTouch(View v, MotionEvent event) {
			if (event.getAction() == MotionEvent.ACTION_DOWN) {
			} else if (event.getAction() == MotionEvent.ACTION_MOVE) {
			}
			return true;
		}
	};

	public void onPause() {
		super.onPause();
		MobclickAgent.onPause(this);
	}

	public void onResume() {
		super.onResume();
		MobclickAgent.onResume(this);
		SharedPreferences sp = instance.getSharedPreferences(
				"babyshow_system_count", Context.MODE_PRIVATE);
		if (sp.getInt("notice", 0) > 0) {
			showNew();
		} else {
			newMessage.setVisibility(View.GONE);
		}
		if (SystemService.intances != null
				&& SystemService.intances.mNotificationManager != null) {
			SystemService.intances.mNotificationManager.cancelAll();
		}
		if (imgBoolean) {
			Config.deleteFile(Config.ImageFile + "temp_image.jpg");
			Intent intent = new Intent();
			intent.setType("image/*");
			intent.setAction(Intent.ACTION_GET_CONTENT);
			startActivityForResult(intent, IMAGE_IMAGE_RESULT);
			imgBoolean = false;
		}
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent intent) {
		super.onActivityResult(requestCode, resultCode, intent);
		if (resultCode == Activity.RESULT_OK) {
			if (requestCode == IMAGE_IMAGE_RESULT) {
				Uri uri = intent.getData();
				String currentFilePath = getPath(uri);
				if (!AbStrUtil.isEmpty(currentFilePath)) {
					Intent intent2 = new Intent();
					intent2.setClass(MainTab.this, CropImage.class);
					intent2.putExtra("path", currentFilePath);
					startActivityForResult(intent2, IMAGE_CROP_RETURN);
				}
			} else if (requestCode == IMAGE_CAMERA_RESULT) {
				Intent intent2 = new Intent();
				intent2.setClass(MainTab.this, CropImage.class);
				intent2.putExtra("path", Config.ImageFile + "temp_image.jpg");
				startActivityForResult(intent2, IMAGE_CROP_RETURN);
			}
		}
	}

	/**
	 * 从相册得到的url转换为SD卡中图片路径
	 */
	public String getPath(Uri uri) {
		if (AbStrUtil.isEmpty(uri.getAuthority())) {
			return null;
		}
		String[] projection = { MediaStore.Images.Media.DATA };
		Cursor cursor = managedQuery(uri, projection, null, null, null);
		int column_index = cursor
				.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
		cursor.moveToFirst();
		String path = cursor.getString(column_index);
		return path;
	}

	private void showDialog(final Activity context) {
		dialog = new Builder(context);
		dialog.setTitle("网络连接失败提示：");
		dialog.setMessage("· 尚未连接互联网或网络不稳定\n· 请检查是否有安全软件禁止访问网络");
		dialog.setNegativeButton("确定", new DialogInterface.OnClickListener() {

			@Override
			public void onClick(DialogInterface dialog, int which) {
			}

		});
		dialog.create().show();
	}

	private void initAddXiuxiuDialog() {
		add_xiuxiu_dialog = (RelativeLayout) findViewById(R.id.add_xiuxiu_dialog);
		tab_add_cancel = (RelativeLayout) findViewById(R.id.tab_add_cancel);
		tab_add_xiuxiu = (ImageView) findViewById(R.id.tab_add_xiuxiu);
		tab_add_huati = (ImageView) findViewById(R.id.tab_add_huati);

		add_xiuxiu_dialog.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				cancelAddDialog();
			}
		});

		// 取消添加
		tab_add_cancel.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				cancelAddDialog();
			}
		});

		// 添加秀秀
		tab_add_xiuxiu.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				cancelAddDialog();
				new Thread(new Runnable() {

					@Override
					public void run() {
						try {
							Thread.sleep(400);
							instance.runOnUiThread(new Runnable() {

								@Override
								public void run() {
									startActivity(new Intent(MainTab.this,
											AddNewActivity.class));
								}
							});
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
				}).start();
			}
		});

		// 添加话题
		tab_add_huati.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				cancelAddDialog();
				new Thread(new Runnable() {

					@Override
					public void run() {
						try {
							Thread.sleep(400);
							instance.runOnUiThread(new Runnable() {

								@Override
								public void run() {
									startActivity(new Intent(MainTab.this,
											AddNewActivity.class));
								}
							});
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
				}).start();
			}
		});
	}

	// 取消添加秀秀/话题提示框
	public static void cancelAddDialog() {

		tab_add_cancel.setVisibility(View.INVISIBLE);
		ImageViewAnimationUtil animation01 = new ImageViewAnimationUtil(400,
				600);
		animation01.downToView(tab_add_xiuxiu);

		ImageViewAnimationUtil animation02 = new ImageViewAnimationUtil(400,
				600);
		animation02.downToView(tab_add_huati);

		new Thread(new Runnable() {

			@Override
			public void run() {
				try {
					Thread.sleep(400);
					instance.runOnUiThread(new Runnable() {

						@Override
						public void run() {
							tab_add_xiuxiu.setVisibility(View.GONE);
							tab_add_huati.setVisibility(View.GONE);
							add_xiuxiu_dialog.setVisibility(View.GONE);
						}
					});
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}).start();

	}

	// 显示添加秀秀/话题提示框
	public static void showAddDialog() {
		add_xiuxiu_dialog.setVisibility(View.VISIBLE);
		tab_add_xiuxiu.setVisibility(View.VISIBLE);
		tab_add_huati.setVisibility(View.VISIBLE);

		ImageViewAnimationUtil animation01 = new ImageViewAnimationUtil(400,
				600);
		animation01.upToView(tab_add_xiuxiu);

		ImageViewAnimationUtil animation02 = new ImageViewAnimationUtil(400,
				600);
		animation02.upToView(tab_add_huati);

		new Thread(new Runnable() {

			@Override
			public void run() {
				try {
					Thread.sleep(500);
					instance.runOnUiThread(new Runnable() {

						@Override
						public void run() {
							MainTab.tab_add_cancel.setVisibility(View.VISIBLE);
						}
					});
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}).start();
	}

}
