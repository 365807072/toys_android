package com.yyqq.code.photo;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

import net.tsz.afinal.FinalHttp;
import net.tsz.afinal.http.AjaxCallBack;
import net.tsz.afinal.http.AjaxParams;

import org.json.JSONObject;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Matrix;
import android.media.ExifInterface;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import com.ab.util.AbFileUtil;
import com.umeng.analytics.MobclickAgent;
import com.yyqq.babyshow.R;
import com.yyqq.code.buy.BuyShow;
import com.yyqq.code.grow.GrowEditActivity;
import com.yyqq.code.main.AddNewActivity;
import com.yyqq.code.main.AddNewContinueActivity;
import com.yyqq.code.main.MainItemDetialActivity;
import com.yyqq.code.main.MainTab;
import com.yyqq.code.postbar.PostBarAddActivity;
import com.yyqq.code.video.VideoDetialActivity;
import com.yyqq.commen.utils.BimpUtil;
import com.yyqq.commen.utils.Config;
import com.yyqq.framework.application.ServerMutualConfig;

public class CropImage extends Activity implements OnClickListener {
	private Button mSave;
	private Button mCancel, rotateLeft, rotateRight;
	Bitmap mBitmap;
	String filepath;
	ImageView img;
	public Activity context;
	public String tag = "CropImage";
	String path;

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		MainTab.imgBoolean = true;
		this.finish();
		return super.onKeyDown(keyCode, event);
	}

	public void onResume() {
		super.onResume();
		MobclickAgent.onResume(this);
	}

	public void onPause() {
		super.onPause();
		MobclickAgent.onPause(this);
	}

	public void onCreate(Bundle b) {
		super.onCreate(b);
		Config.setActivityState(this);
		context = this;
		setContentView(R.layout.cropimage);
		img = (ImageView) findViewById(R.id.img);
		mSave = (Button) this.findViewById(R.id.okBtn);
		mCancel = (Button) this.findViewById(R.id.cancelBtn);
		rotateLeft = (Button) this.findViewById(R.id.rotateLeft);
		rotateRight = (Button) this.findViewById(R.id.rotateRight);
		mSave.setOnClickListener(this);
		mCancel.setOnClickListener(this);
		rotateLeft.setOnClickListener(this);
		rotateRight.setOnClickListener(this);
		// 相册中原来的图片
		path = getIntent().getStringExtra("path");
		if (path.startsWith("http:")) {
			Config.showProgressDialog(context, false, null);
			FinalHttp fh = new FinalHttp();
			final String filename = path.substring(path.lastIndexOf("/") + 1,
					path.length());
			fh.download(path, Config.ImageFile + filename,
					new AjaxCallBack<File>() {
						@Override
						public void onFailure(Throwable t, String strMsg) {
							super.onFailure(t, strMsg);
							Config.dismissProgress();
							Config.showFiledToast(context);
						}

						@Override
						public void onSuccess(File t) {
							super.onSuccess(t);
							Config.dismissProgress();
							mBitmap = AbFileUtil.getBitmapFromSD(t);
							img.setImageBitmap(mBitmap);
							path = Config.ImageFile + filename;
						}
					});
		} else {
			if (BimpUtil.drr.size() < 19) {
				mBitmap = BitmapCache.getFile(path);
			}
			img.setImageBitmap(mBitmap);
		}
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.cancelBtn:
			MainTab.imgBoolean = true;
			this.finish();
			break;
		case R.id.okBtn:
			Intent intent = new Intent();
			if (BimpUtil.drr.size() < 19) {
				saveBitmap(path);
				intent.putExtra("path", path);
				BimpUtil.drr.add(path);
			}

			if ("isPostBar".equals(getIntent().getStringExtra("tag"))) {
				intent.setClass(context, PostBarAddActivity.class);
				intent.putExtra("group_id",
						getIntent().getStringExtra("group_id"));
			} else if ("isBuy".equals(getIntent().getStringExtra("tag"))) {
				intent.setClass(context, BuyShow.class);
			} else if ("gen".equals(getIntent().getStringExtra("tag"))) {
				if (null != MainItemDetialActivity.mainItemDetialActivity) {
					MainItemDetialActivity.mainItemDetialActivity.finish();
				}
				intent.setClass(context, MainItemDetialActivity.class);
				intent.putExtra("user_id", getIntent()
						.getStringExtra("user_id"));
				intent.putExtra("img_id", getIntent().getStringExtra("img_id"));
				intent.putExtra("is_save", getIntent()
						.getStringExtra("is_save"));
				intent.putExtra("tan", "tan");
			} else if ("video".equals(getIntent().getStringExtra("tag"))) {
				if (null != VideoDetialActivity.videoDetialActivity) {
					VideoDetialActivity.videoDetialActivity.finish();
				}
				intent.setClass(context, VideoDetialActivity.class);
				intent.putExtra("user_id", getIntent()
						.getStringExtra("user_id"));
				intent.putExtra("img_id", getIntent().getStringExtra("img_id"));
				intent.putExtra("is_save", getIntent()
						.getStringExtra("is_save"));
				intent.putExtra("tan", "tan");
			} else if ("isGrow".equals(getIntent().getStringExtra("tag"))) {
				Toast.makeText(context, "相片上传中\n可能需要2-3分钟\n完成后有提示\n先去其他页面看看吧",
						0).show();
				Intent intent1 = new Intent();
				intent1.setClass(context, MainTab.class);
				intent1.putExtra("tabid", 3);
				startActivity(intent1);
				new Thread(new Runnable() {

					@Override
					public void run() {
						Send();
					}
				}).start();
				return;
			} else if ("isGrowEdit".equals(getIntent().getStringExtra("tag"))) {
				new Thread(new Runnable() {

					@Override
					public void run() {
						Send1();
					}
				}).start();
				return;
			} 
			
			if(AddNewActivity.AddNewActivity_TAG.equals(getIntent().getStringExtra("tag"))){
				intent.setClass(context, AddNewActivity.class);
			}else if(AddNewContinueActivity.AddNewContinueActivity_TAG.equals(getIntent().getStringExtra("tag"))){
				intent.setClass(context, AddNewContinueActivity.class);
			}else if("isPostBar".equals(getIntent().getStringExtra("tag"))){
				CropImage.this.finish();
			}else{
				startActivity(intent);
			}
			this.finish();
			break;
		case R.id.rotateLeft:
			startRotate(270.f);
			break;
		case R.id.rotateRight:
			startRotate(90.f);
			break;
		}
	}

	public void saveBitmap(String path) {
		FileOutputStream fos = null;
		try {
			fos = new FileOutputStream(path);
			mBitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);
			fos.flush();
			fos.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	Handler mHandler = new Handler();

	public void startRotate(float d) {
		final float degrees = d;
		Matrix m = new Matrix();
		m.setRotate(degrees);
		Bitmap tb = Bitmap.createBitmap(mBitmap, 0, 0, mBitmap.getWidth(),
				mBitmap.getHeight(), m, false);
		mBitmap = tb;
		resetView(tb);
	}

	public void resetView(Bitmap b) {
		img.setImageBitmap(b);
	}

	/**
	 * 成长记录，上传照片
	 */
	final AjaxParams params = new AjaxParams();
	final FinalHttp fh = new FinalHttp();

	public void Send() {
		JSONObject jsonObject = new JSONObject();
		params.put("user_id", Config.getUser(context).uid);
		params.put("baby_id", getIntent().getStringExtra("baby_id"));
		File mFile = null;
		mFile = BitmapCache.getimageyang(path, "img_" + 1 + ".jpg", "duo");
		try {
			params.put("img1", mFile);
			// ExifInterface exif = new ExifInterface(path);
			// String date = exif.getAttribute(ExifInterface.TAG_DATETIME);
			SimpleDateFormat formatter = new SimpleDateFormat(
					"yyyy-MM-dd HH:mm:ss");
			Date curDate = new Date(System.currentTimeMillis());// 获取当前时间
			String date = formatter.format(curDate);

			ExifInterface exif = new ExifInterface(BimpUtil.drr.get(0));
			String latitude = exif.getAttribute(ExifInterface.TAG_GPS_LATITUDE);// 纬度
			String longitude = exif
					.getAttribute(ExifInterface.TAG_GPS_LONGITUDE);// 经度
			JSONObject js = new JSONObject();
			js.put("times", date == null ? "" : date);
			js.put("lat", latitude == null ? "" : latitude);
			js.put("lng", longitude == null ? "" : longitude);
			jsonObject.put("img1", js);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (Exception e) {
		}
		params.put("file_count", "1");
		params.put("imgs", jsonObject.toString());

		// Log.e("fanfan", params.toString());
		handler.sendEmptyMessage(1);
	}

	/**
	 * 编辑页面，上传照片
	 */
	public void Send1() {
		JSONObject jsonObject = new JSONObject();
		params.put("user_id", Config.getUser(context).uid);
		params.put("baby_id", getIntent().getStringExtra("baby_id"));
		params.put("album_id", getIntent().getStringExtra("album_id"));
		File mFile = null;
		mFile = BitmapCache.getimageyang(path, "img_" + 1 + ".jpg", "duo");
		try {
			params.put("img1", mFile);
			// SimpleDateFormat formatter = new SimpleDateFormat(
			// "yyyy-MM-dd HH:mm:ss");
			// Date curDate = new Date(System.currentTimeMillis());// 获取当前时间
			// String date = formatter.format(curDate);
			// jsonObject.put("img1", date == null ? "" : date);
			SimpleDateFormat formatter = new SimpleDateFormat(
					"yyyy-MM-dd HH:mm:ss");
			Date curDate = new Date(System.currentTimeMillis());// 获取当前时间
			String date = formatter.format(curDate);
			ExifInterface exif = new ExifInterface(BimpUtil.drr.get(0));
			String latitude = exif.getAttribute(ExifInterface.TAG_GPS_LATITUDE);// 纬度
			String longitude = exif
					.getAttribute(ExifInterface.TAG_GPS_LONGITUDE);// 经度
			JSONObject js = new JSONObject();
			js.put("times", date == null ? "" : date);
			js.put("lat", latitude == null ? "" : latitude);
			js.put("lng", longitude == null ? "" : longitude);
			jsonObject.put("img1", js);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (Exception e) {
		}
		params.put("file_count", "1");
		params.put("imgs", jsonObject.toString());
		handler.sendEmptyMessage(2);
	}

	private Handler handler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			if (msg.what == 1) {
				FinalHttp fh = new FinalHttp();
				fh.post(ServerMutualConfig.ImportToDiaryNew, params,
						new AjaxCallBack<String>() {

							@Override
							public void onFailure(Throwable t, String strMsg) {
								Config.dismissProgress();
								super.onFailure(t, strMsg);
								Toast.makeText(context, strMsg, 1).show();
							}

							@Override
							public void onSuccess(String t) {
								Config.dismissProgress();
								super.onSuccess(t);
								Toast.makeText(context, "上传成功，请刷新", 0).show();
								BimpUtil.drr.clear();
								context.finish();
							}

						});
			} else if (msg.what == 2) {
				FinalHttp fh = new FinalHttp();
				fh.post(ServerMutualConfig.ImportToDiaryV3, params,
						new AjaxCallBack<String>() {
							@Override
							public void onFailure(Throwable t, String strMsg) {
								Config.dismissProgress();
								super.onFailure(t, strMsg);
								Toast.makeText(context, strMsg, 1).show();
							}

							@Override
							public void onSuccess(String t) {
								Config.dismissProgress();
								super.onSuccess(t);
								Intent intent = new Intent();
								intent.setClass(context, GrowEditActivity.class);
								intent.putExtra("baby_id", getIntent()
										.getStringExtra("baby_id"));
								intent.putExtra("album_id", getIntent()
										.getStringExtra("album_id"));
								startActivity(intent);
								BimpUtil.drr.clear();
								context.finish();
							}

						});
			}
		}

	};

}
