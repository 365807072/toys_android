package com.yyqq.code.postbar;

import java.util.ArrayList;
import org.json.JSONException;
import org.json.JSONObject;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.BaseAdapter;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import com.ab.http.AbHttpUtil;
import com.ab.http.AbRequestParams;
import com.ab.http.AbStringHttpResponseListener;
import com.umeng.analytics.MobclickAgent;
import com.yyqq.babyshow.R;
import com.yyqq.commen.model.PostBarTypeItem;
import com.yyqq.commen.utils.Config;
import com.yyqq.commen.utils.Log;
import com.yyqq.commen.view.PullDownView;
import com.yyqq.commen.view.PullDownView.OnPullDownListener;
import com.yyqq.framework.application.MyApplication;
import com.yyqq.framework.application.ServerMutualConfig;

public class QunManageActivity extends Activity implements OnPullDownListener {

	private Activity context;
	private String TAG = "QunMangeActivity";
	private AbHttpUtil ab;
	private PullDownView mPullDownView;
	private ListView listview;
	private MyAdapter adapter;
	private ImageView back;
	ArrayList<PostBarTypeItem> dataPostInterestList = new ArrayList<PostBarTypeItem>();
	private MyApplication app;
	private String group_id, group_name;
	private TextView myQunName;
	private String qunName = "";
	private ImageView edit;
	private int index = 0;// 记录选中的图片位置
	private static int indexitem = 0;// 记录选中的图片位置
	private boolean indexitemfla;// 记录选中的图片位置

	public void onResume() {
		super.onResume();
		if (indexitemfla) {
			indexitemfla = false;
			adapter.notifyDataSetChanged();
			listview.setSelection(indexitem);
		}
		MobclickAgent.onResume(context);
	}
	
	

	// @Override
	// public boolean onKeyDown(int keyCode, KeyEvent event) {
	// Intent intent = new Intent();
	// intent.setClass(context, QunActivity.class);
	// startActivity(intent);
	// context.finish();
	// return false;
	// }

	public void onPause() {
		super.onPause();
		MobclickAgent.onPause(context);
	}

	public void onCreate(Bundle b) {
		super.onCreate(b);
		Config.setActivityState(this);
		context = this;
		setContentView(R.layout.qun_manage);
		init();
	}

	private void init() {
		ab = AbHttpUtil.getInstance(context);
		initView();

		app = (MyApplication) this.getApplication();
		mPullDownView = (PullDownView) findViewById(R.id.list);
		mPullDownView.setOnPullDownListener(this);
		listview = mPullDownView.getListView();

		listview.setDivider(null);

		if (adapter == null) {
			adapter = new MyAdapter();
		}

		listview.setAdapter(adapter);
		// 设置可以自动获取更多 滑到最后一个自动获取 改成false将禁用自动获取更多
		mPullDownView.enableAutoFetchMore(true, 1);
		// 隐藏 并禁用尾部
		// mPullDownView.setHideFooter();
		// 显示并启用自动获取更多
		mPullDownView.setShowFooter();
		// 隐藏并且禁用头部刷新
		mPullDownView.setHideHeader();
		// listview.addHeaderView(mGallery);
		// 显示并且可以使用头部刷新
		// mPullDownView.setShowHeader();
		// mPullDownView.setPadding(0, 0, 0, 0);
		onRefresh();
	}

	@Override
	protected void onStart() {
		super.onStart();
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (requestCode == 1) {
			indexitemfla = true;
			listview.setSelection(indexitem);
		}
	}

	private void initView() {
		myQunName = (TextView) findViewById(R.id.myQunName);
		group_id = getIntent().getStringExtra("group_id");
		group_name = getIntent().getStringExtra("group_name");
		myQunName.setText(group_name);
		edit = (ImageView) findViewById(R.id.edit);
		edit.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				AlertDialog.Builder builder = new Builder(context);
				builder.setTitle("修改群名称");
				final EditText edit_name = new EditText(context);
				edit_name.setSingleLine(true);
				edit_name.setMaxEms(10);
				builder.setView(edit_name);
				builder.setNegativeButton("确定",
						new DialogInterface.OnClickListener() {
							@Override
							public void onClick(DialogInterface arg0, int arg1) {
								AbRequestParams params = new AbRequestParams();
								params.put("login_user_id",
										Config.getUser(context).uid);
								params.put("group_id", group_id);
								params.put("group_name", edit_name.getText()
										.toString().trim());
								// Log.e("fanfan", params.toString());
								ab.post(ServerMutualConfig.UpGroup, params,
										new AbStringHttpResponseListener() {
											@Override
											public void onSuccess(
													int statusCode,
													String content) {
												super.onSuccess(statusCode,
														content);
												try {
													JSONObject json = new JSONObject(
															content);
													if (json.getBoolean("success")) {
														qunName = edit_name
																.getText()
																.toString()
																.trim();
														myQunName
																.setText(edit_name
																		.getText()
																		.toString()
																		.trim());
														adapter.notifyDataSetChanged();
													}

												} catch (JSONException e) {
													e.printStackTrace();
												}
											}

											@Override
											public void onFinish() {
												super.onFinish();
											}

											@Override
											public void onFailure(
													int statusCode,
													String content,
													Throwable error) {
												super.onFailure(statusCode,
														content, error);
											}
										});
							}
						});

				builder.setNeutralButton("取消",
						new DialogInterface.OnClickListener() {
							@Override
							public void onClick(DialogInterface dialog,
									int which) {
							}
						});
				builder.create().show();
			}
		});
		back = (ImageView) findViewById(R.id.fin);
		back.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				Intent intent = new Intent();
				intent.setClass(context, QunActivity.class);
				if (!TextUtils.isEmpty(qunName)) {
					group_name = qunName;
				}
				intent.putExtra("group_name", group_name);
				intent.putExtra("group_id", group_id);
				startActivity(intent);
				context.finish();
			}
		});
	}

	@Override
	public void onRefresh() {
		AbRequestParams params = new AbRequestParams();
		params.put("login_user_id", Config.getUser(context).uid);
		params.put("group_id", group_id);
		// Log.e("fanfan",
		// ServerMutualConfig.GroupDetailListingV1 + "&" + params.toString());
		ab.setTimeout(5000);
		ab.get(ServerMutualConfig.GroupDetailListingV1 + "&" + params.toString(),
				new AbStringHttpResponseListener() {

					@Override
					public void onSuccess(int statusCode, String content) {
						super.onSuccess(statusCode, content);
						try {
							dataPostInterestList.clear();
							JSONObject json = new JSONObject(content);
							for (int i = 0; i < json.getJSONArray("data")
									.length(); i++) {
								PostBarTypeItem item = new PostBarTypeItem();
								item.fromJson(json.getJSONArray("data")
										.getJSONObject(i));
								dataPostInterestList.add(item);
							}
							adapter.notifyDataSetChanged();
						} catch (JSONException e) {
							e.printStackTrace();
						}
					}

					@Override
					public void onFinish() {
						super.onFinish();
					}

					@Override
					public void onFailure(int statusCode, String content,
							Throwable error) {
						super.onFailure(statusCode, content, error);
					}

					@Override
					public void sendSuccessMessage(int statusCode,
							String content) {
						super.sendSuccessMessage(statusCode, content);
						mPullDownView.RefreshComplete();// 这个事线程安全的 可看源代码
						mPullDownView.notifyDidMore();
					}

				});
	}

	@Override
	public void onMore() {
		if (dataPostInterestList.size() == 0) {
			mPullDownView.notifyDidMore();
			mPullDownView.RefreshComplete();
			return;
		}
		AbRequestParams params = new AbRequestParams();
		params.put("login_user_id", Config.getUser(context).uid);
		params.put(
				"post_create_time",
				dataPostInterestList.get(dataPostInterestList.size() - 1).post_create_time
						+ "");
		params.put("group_id", group_id);
		// Log.e("fanfan", ServerMutualConfig.GroupDetailListingV1 + "&" +
		// params.toString());
		ab.get(ServerMutualConfig.GroupDetailListingV1 + "&" + params.toString(),
				new AbStringHttpResponseListener() {

					@Override
					public void onSuccess(int statusCode, String content) {
						super.onSuccess(statusCode, content);
						try {
							JSONObject json = new JSONObject(content);
							for (int i = 0; i < json.getJSONArray("data")
									.length(); i++) {
								PostBarTypeItem item = new PostBarTypeItem();
								item.fromJson(json.getJSONArray("data")
										.getJSONObject(i));
								dataPostInterestList.add(item);
							}
							adapter.notifyDataSetChanged();
						} catch (JSONException e) {
							e.printStackTrace();
						}
					}

					@Override
					public void sendSuccessMessage(int statusCode,
							String content) {
						super.sendSuccessMessage(statusCode, content);
						mPullDownView.RefreshComplete();// 这个事线程安全的 可看源代码
						mPullDownView.notifyDidMore();
					}

				});
	}

	class ViewHolder {
		RelativeLayout tu;
		LinearLayout ding, delete, ly_edit, ly_jingpin, ly_gonggao;
		ImageView img, img2, jingxuan, bt_ding;
		TextView post_title;
		TextView visit_num;
		TextView see_num;
		TextView msg, msg2;
		TextView tv_ding;
		TextView tv_gonggao, tv_jinghua;
		ImageView ig_gonggao, ig_jinghua;
	}

	public class MyAdapter extends BaseAdapter {

		@Override
		public int getCount() {
			return dataPostInterestList.size();
		}

		@Override
		public Object getItem(int arg0) {
			return dataPostInterestList.get(arg0);
		}

		@Override
		public long getItemId(int arg0) {
			return arg0;
		}

		@Override
		public View getView(int index, View convertView, ViewGroup arg2) {
			LayoutInflater inflater = (LayoutInflater) context
					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			convertView = inflater.inflate(R.layout.qun_manage_item, null);
			ViewHolder holder = null;
			holder = new ViewHolder();
			holder.tu = (RelativeLayout) convertView.findViewById(R.id.tu);
			holder.ly_edit = (LinearLayout) convertView
					.findViewById(R.id.ly_edit);
			holder.ding = (LinearLayout) convertView.findViewById(R.id.ding);
			holder.ly_jingpin = (LinearLayout) convertView
					.findViewById(R.id.ly_jingpin);
			holder.ly_gonggao = (LinearLayout) convertView
					.findViewById(R.id.ly_gonggao);
			holder.bt_ding = (ImageView) convertView.findViewById(R.id.bt_ding);
			holder.tv_ding = (TextView) convertView.findViewById(R.id.tv_ding);
			holder.delete = (LinearLayout) convertView
					.findViewById(R.id.delete);
			holder.img = (ImageView) convertView.findViewById(R.id.post_img);
			holder.img2 = (ImageView) convertView.findViewById(R.id.post_img2);
			holder.post_title = (TextView) convertView
					.findViewById(R.id.post_title);
			holder.msg = (TextView) convertView.findViewById(R.id.msg);
			holder.tv_gonggao = (TextView) convertView
					.findViewById(R.id.tv_gonggao);
			holder.ig_gonggao = (ImageView) convertView
					.findViewById(R.id.ig_gonggao);
			holder.tv_jinghua = (TextView) convertView
					.findViewById(R.id.tv_jinghua);
			holder.ig_jinghua = (ImageView) convertView
					.findViewById(R.id.ig_jinghua);

			final PostBarTypeItem item = dataPostInterestList.get(index);

			// 图片
			if (!TextUtils.isEmpty(item.img)) {
				app.display(item.img, holder.img, R.drawable.deft_color);
			} else {
				holder.tu.setVisibility(View.GONE);
			}
			// 标题
			if (!TextUtils.isEmpty(item.img_title))
				holder.post_title.setText(item.img_title);
			// 描述
			if (0 == index) {
				holder.ly_edit.setVisibility(View.GONE);
				holder.msg.setVisibility(View.VISIBLE);
				holder.msg.setText(item.description);
			}
			// 设置公告
			if ("1".equals(item.is_notice)) {
				holder.tv_gonggao.setTextColor(Color.parseColor("#779efd"));
				holder.ig_gonggao
						.setBackgroundResource(R.drawable.qun_gonggao_sel);
			} else {
				holder.tv_gonggao.setTextColor(Color.parseColor("#666666"));
				holder.ig_gonggao.setBackgroundResource(R.drawable.qun_gonggao);
			}
			holder.ly_gonggao.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View arg0) {
					AbRequestParams params = new AbRequestParams();
					params.put("login_user_id", Config.getUser(context).uid);
					params.put("group_id", group_id);
					params.put("img_id", item.img_id);
					if ("1".equals(item.is_notice)) {
						params.put("is_cancle", "1");
					}
					// Log.e("fanfan", params.toString());
					ab.post(ServerMutualConfig.NoticeGroupListing, params,
							new AbStringHttpResponseListener() {
								@Override
								public void onSuccess(int statusCode,
										String content) {
									super.onSuccess(statusCode, content);
									try {
										JSONObject json = new JSONObject(
												content);
										if (json.getBoolean("success")) {
											Toast.makeText(context,
													json.getString("reMsg"),
													Toast.LENGTH_SHORT).show();
											onRefresh();
										}

									} catch (JSONException e) {
										e.printStackTrace();
									}
								}

								@Override
								public void onFinish() {
									super.onFinish();
								}

								@Override
								public void onFailure(int statusCode,
										String content, Throwable error) {
									super.onFailure(statusCode, content, error);
								}
							});
				}
			});
			// 设置精华
			if ("1".equals(item.is_essence)) {
				holder.tv_jinghua.setTextColor(Color.parseColor("#fe7676"));
				holder.ig_jinghua
						.setBackgroundResource(R.drawable.qun_jinghua_sel);
			} else {
				holder.tv_jinghua.setTextColor(Color.parseColor("#666666"));
				holder.ig_jinghua.setBackgroundResource(R.drawable.qun_jinghua);
			}
			holder.ly_jingpin.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View arg0) {
					AbRequestParams params = new AbRequestParams();
					params.put("login_user_id", Config.getUser(context).uid);
					params.put("group_id", group_id);
					params.put("img_id", item.img_id);
					if ("1".equals(item.is_essence)) {
						params.put("is_cancle", "1");
					}
					// Log.e("fanfan", params.toString());
					ab.post(ServerMutualConfig.EssenceGroupListing, params,
							new AbStringHttpResponseListener() {
								@Override
								public void onSuccess(int statusCode,
										String content) {
									super.onSuccess(statusCode, content);
									try {
										JSONObject json = new JSONObject(
												content);
										if (json.getBoolean("success")) {
											Toast.makeText(context,
													json.getString("reMsg"),
													Toast.LENGTH_SHORT).show();
											onRefresh();
										}

									} catch (JSONException e) {
										e.printStackTrace();
									}
								}

								@Override
								public void onFinish() {
									super.onFinish();
								}

								@Override
								public void onFailure(int statusCode,
										String content, Throwable error) {
									super.onFailure(statusCode, content, error);
								}
							});
				}
			});
			// 群主置顶
			if ("1".equals(item.is_top)) {
				holder.tv_ding.setText("置顶");
				holder.tv_ding.setTextColor(Color.parseColor("#999999"));
				holder.bt_ding.setBackgroundResource(R.drawable.qun_down);
			} else {
				holder.tv_ding.setText("置顶");
			}
			holder.ding.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View arg0) {
					AbRequestParams params = new AbRequestParams();
					params.put("login_user_id", Config.getUser(context).uid);
					params.put("group_id", group_id);
					params.put("img_id", item.img_id);
					if ("1".equals(item.is_top)) {
						params.put("is_cancle", "1");
					}
					// Log.e("fanfan", params.toString());
					ab.post(ServerMutualConfig.TopGroupListing, params,
							new AbStringHttpResponseListener() {
								@Override
								public void onSuccess(int statusCode,
										String content) {
									super.onSuccess(statusCode, content);
									try {
										JSONObject json = new JSONObject(
												content);
										if (json.getBoolean("success")) {
											Toast.makeText(context,
													json.getString("reMsg"),
													Toast.LENGTH_SHORT).show();
											onRefresh();
										}

									} catch (JSONException e) {
										e.printStackTrace();
									}
								}

								@Override
								public void onFinish() {
									super.onFinish();
								}

								@Override
								public void onFailure(int statusCode,
										String content, Throwable error) {
									super.onFailure(statusCode, content, error);
								}
							});
				}
			});

			// 群主删除
			holder.delete.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View arg0) {
					AbRequestParams params = new AbRequestParams();
					params.put("login_user_id", Config.getUser(context).uid);
					params.put("group_id", group_id);
					params.put("img_id", item.img_id);
					// Log.e("fanfan", params.toString());
					ab.post(ServerMutualConfig.DelListingShow, params,
							new AbStringHttpResponseListener() {
								@Override
								public void onSuccess(int statusCode,
										String content) {
									super.onSuccess(statusCode, content);
									try {
										JSONObject json = new JSONObject(
												content);
										if (json.getBoolean("success")) {
											Toast.makeText(context,
													json.getString("reMsg"),
													Toast.LENGTH_SHORT).show();
											onRefresh();
										} else {
											Toast.makeText(context,
													json.getString("reMsg"),
													Toast.LENGTH_SHORT).show();
										}

									} catch (JSONException e) {
										e.printStackTrace();
									}
								}

								@Override
								public void onFinish() {
									super.onFinish();
								}

								@Override
								public void onFailure(int statusCode,
										String content, Throwable error) {
									super.onFailure(statusCode, content, error);
								}
							});
				}
			});

			convertView.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View v) {
					// Intent intent = new Intent(context,
					// PostShow_Detail.class);
					// intent.putExtra("user_id", item.user_id);
					// intent.putExtra("img_id", item.img_id);
					// indexitem = listview.getFirstVisiblePosition();
					// context.startActivityForResult(intent, 1);
				}
			});

			return convertView;
		}

	}

}
