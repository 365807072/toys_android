package com.yyqq.code.toyslease;

import java.util.ArrayList;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.Toast;

import com.ab.http.AbHttpUtil;
import com.ab.http.AbRequestParams;
import com.ab.http.AbStringHttpResponseListener;
import com.umeng.analytics.MobclickAgent;
import com.yyqq.babyshow.R;
import com.yyqq.code.login.WebLoginActivity;
import com.yyqq.commen.adapter.MainItemBodyAdapter;
import com.yyqq.commen.model.MainItemBodyImgBean;
import com.yyqq.commen.model.ToysDetailBean;
import com.yyqq.commen.share.GroupSharedUtils;
import com.yyqq.commen.utils.BadgeView;
import com.yyqq.commen.utils.Config;
import com.yyqq.commen.utils.RoundAngleImageView;
import com.yyqq.commen.utils.ShoppingCartUtils;
import com.yyqq.commen.view.PullDownView.OnPullDownListener;
import com.yyqq.commen.view.RecodeListView;
import com.yyqq.framework.activity.BaseActivity;
import com.yyqq.framework.application.MyApplication;
import com.yyqq.framework.application.ServerMutualConfig;

/**
 * 玩具详情
 * */
public class ToysLeaseDetailActivity extends BaseActivity implements OnPullDownListener{

	private LinearLayout lease_detail_detail;
	private LinearLayout lease_detail_support;
	private LinearLayout lease_detail_des;
	private RelativeLayout lease_detail_img_all;
	private ImageView main_item_back;
	private ImageView lease_detail_img;
	private TextView lease_detail_name;
	private TextView lease_detail_from;
	private TextView lease_detail_support_text;
	private TextView lease_detail_hint01_title;
	private TextView lease_detail_hint01_text;
	private TextView lease_detail_hint02_title;
	private TextView lease_detail_hint02_text;
	private TextView lease_detail_hint03_title;
	private TextView lease_detail_hint03_text;
	private TextView lease_detail_model_01title;
	private TextView lease_user_name;
	private TextView lease_detail_sunpei;
	private TextView lease_detail_sunpeihint;
	private TextView lease_detail_baozhang;
	private RoundAngleImageView lease_user_icon;
	private RecodeListView lease_detail_des_list;
	private static ImageView lease_detail_cart;
	private static TextView lease_detail_change;
	private static TextView lease_detail_add;
	private static TextView lease_detail_pay;
	private ScrollView lease_detail_sc;
	private TextView lease_detail_hintqq;
	private TextView lease_detail_addtext;
	private TextView lease_detail_hintqqnumber;
	private ImageView lease_detail_hint02_phone;
	private ImageView toys_detial_shared;
	private TextView lease_detail_leaseprice;
	private TextView lease_detail_price;
	private ImageView lease_detail_category_icon;
	
	private static BadgeView badge;
	public static String TOYS_DETAIL_KEY = "toys_detail_key";
	private AbHttpUtil ab;
	private LayoutInflater inflater;
	private ArrayList<MainItemBodyImgBean> bodyList = new ArrayList<MainItemBodyImgBean>();
	private ArrayList<String> imgList = new ArrayList<String>();
	private String business_id = "";
	private String wayType = "";
	private String phoneNumber = "";
	private String shared_img = "";
	private String shared_des = "";
	private String shared_title = "";
	public static ToysLeaseDetailActivity toysLeaseDetailActivity = null;
	private boolean isToPay = false;
	private static boolean isCard = false;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_yoys_lease_detail);
	}

	@Override
	protected void initView() {
		lease_detail_category_icon = (ImageView) findViewById(R.id.lease_detail_category_icon);
		lease_detail_leaseprice = (TextView) findViewById(R.id.lease_detail_leaseprice);
		lease_detail_price = (TextView) findViewById(R.id.lease_detail_price);
		lease_detail_change = (TextView) findViewById(R.id.lease_detail_change);
		lease_detail_add = (TextView) findViewById(R.id.lease_detail_add);
		lease_detail_cart = (ImageView) findViewById(R.id.lease_detail_cart);
		badge = new BadgeView(this, lease_detail_cart);
		ShoppingCartUtils.DrewGouWuCheNumberBitmap(this, lease_detail_cart);
		toys_detial_shared = (ImageView) findViewById(R.id.toys_detial_shared);
		lease_detail_baozhang = (TextView) findViewById(R.id.lease_detail_baozhang);
		lease_detail_hint02_phone = (ImageView) findViewById(R.id.lease_detail_hint02_phone);
		lease_user_name = (TextView) findViewById(R.id.lease_user_name);
		lease_user_icon = (RoundAngleImageView) findViewById(R.id.lease_user_icon);
		lease_detail_sc = (ScrollView) findViewById(R.id.lease_detail_sc);
		lease_detail_detail = (LinearLayout) findViewById(R.id.lease_detail_detail);
		lease_detail_support = (LinearLayout) findViewById(R.id.lease_detail_support);
		lease_detail_des = (LinearLayout) findViewById(R.id.lease_detail_des);
		lease_detail_img_all = (RelativeLayout) findViewById(R.id.lease_detail_img_all);
		main_item_back = (ImageView) findViewById(R.id.main_item_back);
		lease_detail_img = (ImageView) findViewById(R.id.lease_detail_img);
		lease_detail_name = (TextView) findViewById(R.id.lease_detail_name);
		lease_detail_from = (TextView) findViewById(R.id.lease_detail_from);
		lease_detail_support_text = (TextView) findViewById(R.id.lease_detail_support_text);
		lease_detail_hint01_title = (TextView) findViewById(R.id.lease_detail_hint01_title);
		lease_detail_hint01_text = (TextView) findViewById(R.id.lease_detail_hint01_text);
		lease_detail_hint02_title = (TextView) findViewById(R.id.lease_detail_hint02_title);
		lease_detail_hint02_text = (TextView) findViewById(R.id.lease_detail_hint02_text);
		lease_detail_hint03_title = (TextView) findViewById(R.id.lease_detail_hint03_title);
		lease_detail_hint03_text = (TextView) findViewById(R.id.lease_detail_hint03_text);
		lease_detail_model_01title = (TextView) findViewById(R.id.lease_detail_model_01title);
		lease_detail_sunpei = (TextView) findViewById(R.id.lease_detail_sunpei);
		lease_detail_sunpeihint = (TextView) findViewById(R.id.lease_detail_sunpeihint);
		lease_detail_des_list = (RecodeListView) findViewById(R.id.lease_detail_des_list);
//		lease_detail_monery = (TextView) findViewById(R.id.lease_detail_monery);
//		lease_detail_originalprice = (TextView) findViewById(R.id.lease_detail_originalprice);
		lease_detail_pay = (TextView) findViewById(R.id.lease_detail_pay);
		lease_detail_hintqq = (TextView) findViewById(R.id.lease_detail_hintqq);
		lease_detail_addtext = (TextView) findViewById(R.id.lease_detail_addtext);
		lease_detail_hintqqnumber = (TextView) findViewById(R.id.lease_detail_hintqqnumber);
		lease_detail_des_list.setFocusable(false); // 消除listview焦点
		lease_detail_sc.smoothScrollTo(0,0); // scrollView置顶
		lease_detail_support.setVisibility(View.GONE);
		
		ShoppingCartUtils.DrewNumberBitmap(this, lease_detail_cart);
	}

	@Override
	protected void initData() {
		toysLeaseDetailActivity = this;
		ab = AbHttpUtil.getInstance(ToysLeaseDetailActivity.this);
		inflater = LayoutInflater.from(ToysLeaseDetailActivity.this);
	}

	@Override
	protected void setListener() {
		
		lease_detail_cart.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(!MyApplication.getVisitor().equals("0")  || Config.getUser(ToysLeaseDetailActivity.this).uid.equals("")){
					Intent in = new Intent(ToysLeaseDetailActivity.this, WebLoginActivity.class);
					startActivity(in);
				}else{
					ShoppingCartActivity.isShowBack = true;
					Intent intent = new Intent(ToysLeaseDetailActivity.this, ShoppingCartActivity.class);
					startActivity(intent);
//					ToysLeaseMainTabActivity.tabHost.setCurrentTab(2);
//					Intent intent = new Intent(ToysLeaseDetailActivity.this, ToysLeaseMainTabActivity.class);
//					intent.putExtra("tabid", 2);
//					startActivity(intent);
				}
			}
		});
		
		lease_detail_add.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				ShoppingCartUtils.addToysToCart(ToysLeaseDetailActivity.this, business_id, 0, lease_detail_cart);
			}
		});
		
		lease_detail_change.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				ShoppingCartUtils.addToysToCart(ToysLeaseDetailActivity.this, business_id, 1, lease_detail_cart);
			}
		});
		
		toys_detial_shared.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				GroupSharedUtils.groupShareBean bean = new GroupSharedUtils.groupShareBean();
				bean.setContext(ToysLeaseDetailActivity.this);
				bean.setShare_img(shared_img);
				bean.setShare_text(shared_des);
				bean.setShare_title(shared_title);
				bean.setShare_url("http://www.baobaoshowshow.com/fenxiang/play.html?"+"business_id="+business_id+"&login_user_id="+Config.getUser(ToysLeaseDetailActivity.this).uid);
				GroupSharedUtils.SharedGroup(bean);
			}
		});
		
		lease_detail_hint02_phone.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				AlertDialog.Builder builder = new Builder(ToysLeaseDetailActivity.this);
				builder.setTitle("确定联系对方吗？");
				builder.setPositiveButton("拨号",
						new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog,
							int which) {
						dialog.dismiss();
						Intent intent = new Intent(Intent.ACTION_CALL);
						intent.setData(Uri.parse("tel:" + phoneNumber));
						startActivity(intent);
					}
				});
				builder.setNegativeButton("取消",
						new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog,
							int which) {
						dialog.dismiss();
					}
				});
				builder.create().show();
			}
		});
		
		main_item_back.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				ToysLeaseDetailActivity.this.finish();
			}
		});
		
		lease_detail_pay.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				if(!isToPay){
					return;
				}
				
				if(!MyApplication.getVisitor().equals("0")  || Config.getUser(ToysLeaseDetailActivity.this).uid.equals("")){
					Intent in = new Intent(ToysLeaseDetailActivity.this, WebLoginActivity.class);
					startActivity(in);
				}else{
					if(wayType.isEmpty()){
						return;
					}else{
						if(wayType.equals("0")){ // 不支持
							AlertDialog.Builder builder = new Builder(ToysLeaseDetailActivity.this);
							builder.setTitle("确定联系对方吗？");
							builder.setPositiveButton("拨号",
									new DialogInterface.OnClickListener() {
								@Override
								public void onClick(DialogInterface dialog,
										int which) {
									dialog.dismiss();
									Intent intent = new Intent(Intent.ACTION_CALL);
									intent.setData(Uri.parse("tel:" + phoneNumber));
									startActivity(intent);
								}
							});
							builder.setNegativeButton("取消",
									new DialogInterface.OnClickListener() {
								@Override
								public void onClick(DialogInterface dialog,
										int which) {
									dialog.dismiss();
								}
							});
							builder.create().show();
						}else if(wayType.equals("1")){ // 支持
							if(!isCard){
								Intent intent = new Intent(ToysLeaseDetailActivity.this, ToysLeaseOrderConfirmActivity.class);
								intent.putExtra(ToysLeaseOrderConfirmActivity.CONFIRM_BUSINESS_ID, business_id);
								startActivity(intent);
							}else{
								ToysLeaseOrderConfirmActivity.createNewOrder(ToysLeaseDetailActivity.this, ToysLeaseOrderConfirmActivity.CONFIRM_BUSINESS_ID, business_id);
							}
						}
					}
				}
			}
		});
	}
	
	@Override
	protected void onResume() {
		super.onResume();
		MobclickAgent.onResume(this);
		onRefresh();
	}
	
	@Override
	protected void onPause() {
		super.onPause();
		MobclickAgent.onPause(this);
	}
	
	@Override
	public void onRefresh() {
		Config.showProgressDialog(ToysLeaseDetailActivity.this, false, null);
		final AbRequestParams params = new AbRequestParams();
		params.put("login_user_id", Config.getUser(ToysLeaseDetailActivity.this).uid);
		params.put("business_id", getIntent().getStringExtra(TOYS_DETAIL_KEY));
		ab.get(ServerMutualConfig.GET_TOYS_DETAIL + "&" + params.toString(),new AbStringHttpResponseListener() {
			@Override
			public void onSuccess(int statusCode, String content) {
				super.onSuccess(statusCode, content);
				Config.dismissProgress();
				try {
					if(!content.isEmpty() && new JSONObject(content).getBoolean("success")){
						initToysDetial(content);
						initToysDetialImageList(content);
					}else{
						Toast.makeText(ToysLeaseDetailActivity.this, new JSONObject(content).getString("reMsg"), 2).show();
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
			}
			
			@Override
			public void onFinish() {
				super.onFinish();
				Config.dismissProgress();
			}
			
			@Override
			public void onFailure(int statusCode, String content,
					Throwable error) {
				super.onFailure(statusCode, content, error);
			}
		});
		
	}

	@Override
	public void onMore() {
		// TODO Auto-generated method stub
		
	}
	
	
	/**
	 * 初始化页面数据
	 * */
	private void initToysDetial(String resultStr){
		try {
			JSONObject json = new JSONObject(resultStr);
			ToysDetailBean bean = new ToysDetailBean();
			bean = bean.fromJson(ToysLeaseDetailActivity.this, json.getJSONObject("data"));
			shared_des = json.getJSONObject("data").getJSONObject("detail").getString("share_des");
			shared_title = json.getJSONObject("data").getJSONObject("detail").getString("share_title");
			business_id = bean.getDetail().getBusiness_id();
			MyApplication.getInstance().display(bean.getDetail().getImg_thumb(), lease_detail_img, R.drawable.def_image);
			MyApplication.getInstance().display(bean.getDetail().getUserIconurl(), lease_user_icon, R.drawable.def_image);
			lease_detail_name.setText(bean.getDetail().getMain_business_title());
			lease_detail_from.setText(bean.getDetail().getSupport_name());
			lease_detail_support_text.setText(bean.getDetail().getSupper_des());
			lease_detail_hint01_title.setText(bean.getDetail().getAge_range());
			lease_detail_hint01_text.setText(bean.getDetail().getAge());
			lease_detail_hint02_title.setText("联系方式");
			lease_detail_hint02_text.setText(bean.getDetail().getBusiness_contact());
			lease_detail_hint03_title.setText("发布时间");
			lease_detail_hint03_text.setText(bean.getDetail().getCreate_time());
			lease_detail_model_01title.setText(bean.getToys_des());
			lease_detail_hintqqnumber.setText(bean.getDetail().getQq());
			lease_detail_hintqq.setText("微信号码");
			lease_detail_addtext.setText(bean.getDetail().getAddText());
			lease_user_name.setText(bean.getDetail().getUser_name());
			lease_detail_sunpei.setText(bean.getDetail().getSunpei());
			lease_detail_sunpeihint.setText(bean.getDetail().getSunpeiHint());
			lease_detail_baozhang.setText(bean.getDetail().getBaozhang());
			lease_detail_leaseprice.setText(json.getJSONObject("data").getJSONObject("price").getString("sell_price"));
			lease_detail_price.setText(json.getJSONObject("data").getJSONObject("price").getString("market_price"));
			
			// 分类图标
			if(bean.getDetail().getCategory_icon_url().isEmpty()){
				lease_detail_category_icon.setVisibility(View.GONE);
			}else{
				lease_detail_category_icon.setVisibility(View.VISIBLE);
				MyApplication.getInstance().display(bean.getDetail().getCategory_icon_url(), lease_detail_category_icon, R.drawable.def_image);
			}
			
			if(bean.getDetail().getSunpeiHint().isEmpty()){
				lease_detail_sunpeihint.setVisibility(View.GONE);
			}
			lease_detail_sc.smoothScrollTo(0,0);
			wayType = bean.getDetail().getIs_support();
			phoneNumber = bean.getDetail().getBusiness_contact();
			if(bean.getDetail().getIs_support().equals("1")){
				lease_detail_support.setVisibility(View.VISIBLE);
			}else{
				lease_detail_support.setVisibility(View.GONE);
			}
			
			if(bean.getDetail().getIs_cart().equals("0")){
				lease_detail_add.setVisibility(View.VISIBLE);
			}else{
				lease_detail_add.setVisibility(View.GONE);
			}
			
			if(bean.getDetail().getIs_cart_number().equals("0")){
				lease_detail_cart.setVisibility(View.VISIBLE);
				ShoppingCartUtils.DrewNumberBitmap(this, lease_detail_cart);
			}else{
				lease_detail_cart.setVisibility(View.GONE);
			}
			
			if(bean.getDetail().getIs_change().equals("0")){
				lease_detail_change.setVisibility(View.VISIBLE);
			}else{
				lease_detail_change.setVisibility(View.GONE);
			}
			
			if(bean.getDetail().getOrder_status().equals("0")){
				isCard = false;
				if(bean.getDetail().getIs_order().equals("0")){
					isToPay = true;
					lease_detail_pay.setVisibility(View.VISIBLE);
					lease_detail_pay.setText(bean.getPrice().getPrice_button());
				}else{
					isToPay = false;
					lease_detail_pay.setText(bean.getPrice().getPrice_button());
					lease_detail_pay.setBackgroundDrawable(getResources().getDrawable(R.drawable.toys_detail_no_order));
				}
			}else if(bean.getDetail().getOrder_status().equals("2")){
				isCard = true;
				if(bean.getDetail().getIs_order().equals("0")){
					isToPay = true;
					lease_detail_pay.setVisibility(View.VISIBLE);
					lease_detail_pay.setText(bean.getPrice().getPrice_button());
				}else{
					isToPay = false;
					lease_detail_pay.setVisibility(View.GONE);
				}
			}
			
			
			shared_img = bean.getDetail().getImg_thumb();
//			shared_des = bean.getDetail().getMain_business_title() + "-" +bean.getPrice().getSell_price();
//			shared_title = bean.getDetail().getMain_business_title() + "-" +bean.getPrice().getSell_price();
		} catch (JSONException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * 初始化图文详情
	 * */
	private void initToysDetialImageList(String resultStr){
		try {
			JSONObject json = new JSONObject(resultStr);
			MainItemBodyImgBean infoBean;
			
			if(json.getJSONObject("data").getJSONArray("description").length() == 0){
				lease_detail_model_01title.setVisibility(View.GONE);
				return;
			}
			
			for (int i = 0; i < json.getJSONObject("data").getJSONArray("description").length() ; i++) {
				// 添加文字
				if (!json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getString("business_des").isEmpty()) {
					infoBean = new MainItemBodyImgBean();
					infoBean.setDescription(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getString("business_des"));
					bodyList.add(infoBean);
				}
				// 添加图片信息
				for (int j = 0; j < json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").length(); j++) {
					infoBean = new MainItemBodyImgBean();
					infoBean.setImg_thumb(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").getJSONObject(j).getString("img_thumb"));
					infoBean.setImg_thumb_height(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").getJSONObject(j).getString("img_thumb_height"));
					infoBean.setImg_thumb_width(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").getJSONObject(j).getString("img_thumb_width"));
					infoBean.setImg(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").getJSONObject(j).getString("img_thumb"));
					infoBean.setImg_height(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").getJSONObject(j).getString("img_thumb_height"));
					infoBean.setImg_width(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").getJSONObject(j).getString("img_thumb_width"));
					infoBean.setImg_down(json.getJSONObject("data").getJSONArray("description").getJSONObject(i).getJSONArray("img").getJSONObject(j).getString("img_down"));
					if(!infoBean.getImg_thumb().isEmpty()){
						imgList.add(infoBean.getImg_thumb());
						bodyList.add(infoBean);
					}
				}
			}
			
			if(bodyList.size() != 0){
				MainItemBodyAdapter BodyAdapter = new MainItemBodyAdapter(ToysLeaseDetailActivity.this, inflater, MyApplication.getInstance(), bodyList, imgList);
				lease_detail_des_list.setAdapter(BodyAdapter);
			}else{
				lease_detail_des_list.setVisibility(View.GONE);
				lease_detail_model_01title.setVisibility(View.GONE);
			}
			
		} catch (JSONException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * 更新底部按钮状态
	 * */
	public static void updateBottomBtnType(final Context context, String business_id){
		final AbRequestParams params = new AbRequestParams();
		params.put("login_user_id", Config.getUser(context).uid);
		params.put("business_id", business_id);
		AbHttpUtil.getInstance(context).get(ServerMutualConfig.GET_TOYS_DETAIL_BOTTOM + "&" + params.toString(),new AbStringHttpResponseListener() {
			
			@Override
			public void onSuccess(int statusCode, String content) {
				super.onSuccess(statusCode, content);
				try {
					if(!content.isEmpty() && new JSONObject(content).getBoolean("success")){
						
						// 立即租按钮是否显示
						if(new JSONObject(content).getJSONObject("data").getString("order_status").equals("0")){
							isCard = false;
							if(new JSONObject(content).getJSONObject("data").getString("is_order").equals("0")){
								lease_detail_pay.setVisibility(View.VISIBLE);
								lease_detail_pay.setText(new JSONObject(content).getJSONObject("data").getString("price_button"));
							}else{
								lease_detail_pay.setText(new JSONObject(content).getJSONObject("data").getString("price_button"));
								lease_detail_pay.setBackgroundDrawable(context.getResources().getDrawable(R.drawable.toys_detail_no_order));
							}
						}else if(new JSONObject(content).getJSONObject("data").getString("order_status").equals("2")){
							isCard = true;
							if(new JSONObject(content).getJSONObject("data").getString("is_order").equals("0")){
								lease_detail_pay.setVisibility(View.VISIBLE);
								lease_detail_pay.setText(new JSONObject(content).getJSONObject("data").getString("price_button"));
							}else{
								lease_detail_pay.setVisibility(View.GONE);
							}
						}
						
						// 加入购物车按钮是否显示
						if(new JSONObject(content).getJSONObject("data").getString("is_cart").equals("0")){
							lease_detail_add.setVisibility(View.VISIBLE);
						}else{
							lease_detail_add.setVisibility(View.GONE);
						}
						
						// 更换按钮是否显示
						if(new JSONObject(content).getJSONObject("data").getString("is_change").equals("0")){
							lease_detail_change.setVisibility(View.VISIBLE);
						}else{
							lease_detail_change.setVisibility(View.GONE);
						}
						
						// 购物车图标是否显示
						if(new JSONObject(content).getJSONObject("data").getString("is_cart_number").equals("0")){
							lease_detail_cart.setVisibility(View.VISIBLE);
							ShoppingCartUtils.DrewNumberBitmap(context, lease_detail_cart);
						}else{
							lease_detail_cart.setVisibility(View.GONE);
						}
					}else{
						Toast.makeText(context, new JSONObject(content).getString("reMsg"), 2).show();
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
			}
			
			@Override
			public void onFinish() {
				super.onFinish();
				Config.dismissProgress();
			}
			
			@Override
			public void onFailure(int statusCode, String content,
					Throwable error) {
				super.onFailure(statusCode, content, error);
			}
		});
	}
	
	/**
	 * 加入更换备选后提示框
	 * */
	public static void changeToysSuccess(final Context context){
		AlertDialog.Builder dialog = new Builder(context);
		dialog.setTitle("宝贝半径");
		dialog.setMessage("此玩具已成为备选，最终更换需要到购物车里完成");
		dialog.setNegativeButton("去购物车", new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						ShoppingCartActivity.isShowBack = true;
						Intent intent = new Intent(context, ShoppingCartActivity.class);
						context.startActivity(intent);
					}});
		
		dialog.setPositiveButton("再挑挑", new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface arg0, int arg1) {}});
		dialog.create().show();
	}
	
}
