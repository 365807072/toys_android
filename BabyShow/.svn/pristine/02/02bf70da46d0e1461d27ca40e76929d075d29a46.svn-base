package com.yyqq.code.toyslease;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.ab.http.AbHttpUtil;
import com.ab.http.AbRequestParams;
import com.ab.http.AbStringHttpResponseListener;
import com.umeng.analytics.MobclickAgent;
import com.yyqq.babyshow.R;
import com.yyqq.commen.adapter.ToysLeaseCartAdapter;
import com.yyqq.commen.model.ToysLeaseCartBean;
import com.yyqq.commen.model.ToysLeaseCartItemBean;
import com.yyqq.commen.utils.Config;
import com.yyqq.commen.view.PullDownView;
import com.yyqq.framework.activity.BaseActivity;
import com.yyqq.framework.application.ServerMutualConfig;

/**
 * 玩具购物车
 * */
public class ShoppingCartActivity extends BaseActivity{

	private AbHttpUtil ab;
	private LayoutInflater inflater;
	private ToysLeaseCartAdapter cartAdapter = null;
	private ArrayList<ToysLeaseCartBean> data = new ArrayList<ToysLeaseCartBean>();
	
	private TextView shopping_car_hint_text;
	private PullDownView mPullDownView;
	private ListView listView = null;
	private LinearLayout cart_ntf;
	private TextView cart_monery_hint;
	private TextView cart_monery;
	private ImageView cart_to_pay;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_shopping_cart); 
	}

	@Override
	protected void initView() {
		inflater = LayoutInflater.from(this);
		shopping_car_hint_text = (TextView) findViewById(R.id.shopping_car_hint_text);
		mPullDownView = (PullDownView) findViewById(R.id.lease_main_list);
		mPullDownView.setHideHeader();
		mPullDownView.setHideFooter();
		mPullDownView.RefreshComplete();
		mPullDownView.notifyDidMore();
		mPullDownView.requestFocus();
		listView = mPullDownView.getListView();
		cart_ntf = (LinearLayout) findViewById(R.id.cart_ntf);
		cart_monery_hint = (TextView) findViewById(R.id.cart_monery_hint);
		cart_monery = (TextView) findViewById(R.id.cart_monery);
		cart_to_pay = (ImageView) findViewById(R.id.cart_to_pay);
	}

	@Override
	protected void initData() {
		ab = AbHttpUtil.getInstance(this);
		if(null == cartAdapter){
			cartAdapter = new ToysLeaseCartAdapter(this, inflater, data);
		}
		listView.setAdapter(cartAdapter);
		initCartData();
	}

	@Override
	protected void setListener() {
		
		cart_to_pay.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(data.size() != 0){
					Intent intent = new Intent(ShoppingCartActivity.this, ToysLeasePayActivity.class);
					startActivity(intent);
				}
			}
		});
		
	}
	
	/**
	 * 获取购物车数据
	 * */
	private void initCartData(){
		AbRequestParams params = new AbRequestParams();
		params.put("login_user_id", Config.getUser(this).uid);
		ab.get(ServerMutualConfig.GET_CART_DATA + "&" + params.toString(), new AbStringHttpResponseListener() {
			
			@Override
			public void onSuccess(int statusCode, String content) {
				super.onSuccess(statusCode, content);
				try {
					if(new JSONObject(content).getBoolean("success")){
						
						// 顶部通知
						if(new JSONObject(content).getJSONObject("data1").getString("card_title").isEmpty()){
							cart_ntf.setVisibility(View.GONE);
						}else{
							cart_ntf.setVisibility(View.VISIBLE);
							shopping_car_hint_text.setText(new JSONObject(content).getJSONObject("data1").getString("card_title"));
						}
						
						// 底部金额
						cart_monery_hint.setText(new JSONObject(content).getJSONObject("data1").getString("total_title"));
						cart_monery.setText(new JSONObject(content).getJSONObject("data1").getString("total_price"));
						
						// 中间玩具
						ToysLeaseCartBean cartBean = null;
						JSONArray cartJson = new JSONObject(content).getJSONArray("data");
						ArrayList<ToysLeaseCartItemBean> cartItemList = null;
						for(int i = 0 ; i < cartJson.length() ; i++ ){
							cartBean = new ToysLeaseCartBean();
							cartBean.setIs_member(cartJson.getJSONObject(i).getString("is_member"));
							cartBean.setToys_title(cartJson.getJSONObject(i).getString("toys_title"));
							cartBean.setType(cartJson.getJSONObject(i).getString("type"));
							
							cartItemList = new ArrayList<ToysLeaseCartItemBean>();
							ToysLeaseCartItemBean cartItemBean = null;
							for(int j = 0 ; j < cartJson.getJSONObject(i).getJSONArray("toys_info").length(); j++ ){
								cartItemBean = new ToysLeaseCartItemBean();
								cartItemBean.setBusiness_id(cartJson.getJSONObject(i).getJSONArray("toys_info").getJSONObject(j).getString("business_id"));
								cartItemBean.setBusiness_title(cartJson.getJSONObject(i).getJSONArray("toys_info").getJSONObject(j).getString("business_title"));
								cartItemBean.setCart_id(cartJson.getJSONObject(i).getJSONArray("toys_info").getJSONObject(j).getString("cart_id"));
								cartItemBean.setCheck_state(cartJson.getJSONObject(i).getJSONArray("toys_info").getJSONObject(j).getString("check_state"));
								cartItemBean.setEvery_price(cartJson.getJSONObject(i).getJSONArray("toys_info").getJSONObject(j).getString("every_price"));
								cartItemBean.setImg_thumb(cartJson.getJSONObject(i).getJSONArray("toys_info").getJSONObject(j).getString("img_thumb"));
								cartItemBean.setIs_order(cartJson.getJSONObject(i).getJSONArray("toys_info").getJSONObject(j).getString("is_order"));
								cartItemList.add(cartItemBean);
							}
							
							cartBean.setToys_info(cartItemList);
							data.add(cartBean);
						}
						
						if(data.size() != 0){
							cartAdapter.notifyDataSetChanged();
						}
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
			}

			@Override
			public void onFinish() {
				super.onFinish();
			}

			@Override
			public void onFailure(int statusCode, String content,
					Throwable error) {
				super.onFailure(statusCode, content, error);
			}
		});
	}

	@Override
	public void onPause() {
		super.onPause();
		MobclickAgent.onPause(this);
	}

	@Override
	public void onResume() {
		super.onResume();
		MobclickAgent.onResume(this);
		// 修改底部栏文字颜色
		ToysLeaseMainTabActivity.iconText.get(0).setTextColor(Color.parseColor("#000000"));
		ToysLeaseMainTabActivity.iconText.get(1).setTextColor(Color.parseColor("#000000"));
		ToysLeaseMainTabActivity.iconText.get(2).setTextColor(Color.parseColor("#fe6363"));
		ToysLeaseMainTabActivity.iconText.get(3).setTextColor(Color.parseColor("#000000"));
	}
}
