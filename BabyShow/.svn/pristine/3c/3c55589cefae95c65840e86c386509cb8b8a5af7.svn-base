package com.yyqq.commen.jpush;

import org.json.JSONException;
import org.json.JSONObject;

import com.yyqq.code.business.BusinessDetailActivity;
import com.yyqq.code.business.BusinessList;
import com.yyqq.code.business.UserOderList;
import com.yyqq.code.group.GroupMainActivity;
import com.yyqq.code.main.MainItemDetialActivity;
import com.yyqq.code.main.MainItemDetialWebActivity;
import com.yyqq.code.main.MainTab;
import com.yyqq.code.postbar.PostBarActivity;
import com.yyqq.code.video.VideoDetialActivity;
import com.yyqq.commen.model.PostBarTypeItem;
import com.yyqq.commen.utils.Config;
import com.yyqq.commen.utils.GroupRelevantUtils;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import cn.jpush.android.api.JPushInterface;

/**
 * 自定义接收器
 * 
 * 如果不定义这个 Receiver，则：
 * 1) 默认用户会打开主界面
 * 2) 接收不到自定义消息
 */
public class MyReceiver extends BroadcastReceiver {
	private static final String TAG = "JPush";

	@Override
	public void onReceive(Context context, Intent intent) {
        Bundle bundle = intent.getExtras();
		Log.d(TAG, "[MyReceiver] onReceive - " + intent.getAction() + ", extras: " + printBundle(bundle));
		
        if (JPushInterface.ACTION_REGISTRATION_ID.equals(intent.getAction())) {
            String regId = bundle.getString(JPushInterface.EXTRA_REGISTRATION_ID);
            Log.d(TAG, "[MyReceiver] 接收Registration Id : " + regId);
            //send the Registration Id to your server...
                        
        } else if (JPushInterface.ACTION_MESSAGE_RECEIVED.equals(intent.getAction())) {
        	Log.d(TAG, "[MyReceiver] 接收到推送下来的自定义消息: " + bundle.getString(JPushInterface.EXTRA_MESSAGE));
        	processCustomMessage(context, bundle);
        
        } else if (JPushInterface.ACTION_NOTIFICATION_RECEIVED.equals(intent.getAction())) {
            Log.d(TAG, "[MyReceiver] 接收到推送下来的通知");
            int notifactionId = bundle.getInt(JPushInterface.EXTRA_NOTIFICATION_ID);
            Log.d(TAG, "[MyReceiver] 接收到推送下来的通知的ID: " + notifactionId);
        	
        } else if (JPushInterface.ACTION_NOTIFICATION_OPENED.equals(intent.getAction())) {
            Log.d(TAG, "[MyReceiver] 用户点击打开了通知");
            
            if(!(bundle.getString(JPushInterface.EXTRA_EXTRA)).isEmpty()){
            	try {
            		Intent toIntent = null;
            		JSONObject json = new JSONObject(bundle.getString(JPushInterface.EXTRA_EXTRA));
            		
            		if(json.has("index")){
            			if(Integer.parseInt(json.getString("index")) == 7){
            				GroupRelevantUtils.CheckIntent(context, json.getString("group_id"));
            			}else{
            				switch(Integer.parseInt(json.getString("index"))){
            				case 1:
            					toIntent = new Intent(context, MainItemDetialActivity.class);
            					toIntent.putExtra("img_id", json.getString("img_id"));
            					break;
            				case 2:
            					toIntent = new Intent(context, VideoDetialActivity.class);
            					PostBarTypeItem postBean = new PostBarTypeItem();
            					postBean.setImg_id(json.getString("img_id"));
            					postBean.setUser_id(json.getString("user_id"));
            					postBean.setVideo_url(json.getString("video_url"));
            					postBean.setImg(json.getString("img_url"));
            					postBean.setImg_thumb_width(json.getString("img_w"));
            					postBean.setImg_thumb_height(json.getString("img_h"));
            					Bundle bun = new Bundle();
            					bun.putSerializable(VideoDetialActivity.VIIDEO_INFO, postBean);
            					toIntent.putExtras(bun);
            					break;
            				case 3:
            					toIntent = new Intent(context, PostBarActivity.class);
            					toIntent.putExtra("img_title", json.getString("title"));
            					toIntent.putExtra("tag_id", json.getString("tag_id"));
            					toIntent.putExtra("img_ids", json.getString("img_ids"));
            					toIntent.putExtra("type", json.getString("id"));
            					break;
            				case 4:
            					toIntent = new Intent(context, MainTab.class);
            					toIntent.putExtra("tabid", json.getString("1"));
            					break;
            				case 5:
            					toIntent = new Intent(context, BusinessDetailActivity.class);
            					toIntent.putExtra("business_id", json.getString("business_id"));
            					break;
            				case 6:
            					toIntent = new Intent(context, UserOderList.class);
            					break;
            				case 8:
            					toIntent = new Intent(context, MainItemDetialWebActivity.class);
            					toIntent.putExtra(MainItemDetialWebActivity.LINK_URL, json.getString("web_url"));
            					break;
            				default:
            					Intent i = new Intent(context, MainTab.class);
            					i.putExtras(bundle);
            					//i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            					i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP );
            					context.startActivity(i);    
            					break;
            				};
            				if(null != toIntent){
            					context.startActivity(toIntent);
            				}
            			}
            		}else{
            			Intent i = new Intent(context, MainTab.class);
                    	i.putExtras(bundle);
                    	//i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                    	i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP );
                    	context.startActivity(i);            			
            		}
            	} catch (JSONException e) {
            		e.printStackTrace();
            	}
            }else{
            	Intent i = new Intent(context, MainTab.class);
            	i.putExtras(bundle);
            	i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP );
            	context.startActivity(i);
            }
        } else if (JPushInterface.ACTION_RICHPUSH_CALLBACK.equals(intent.getAction())) {
            Log.d(TAG, "[MyReceiver] 用户收到到RICH PUSH CALLBACK: " + bundle.getString(JPushInterface.EXTRA_EXTRA));
            //在这里根据 JPushInterface.EXTRA_EXTRA 的内容处理代码，比如打开新的Activity， 打开一个网页等..
        	
        } else if(JPushInterface.ACTION_CONNECTION_CHANGE.equals(intent.getAction())) {
        	boolean connected = intent.getBooleanExtra(JPushInterface.EXTRA_CONNECTION_CHANGE, false);
        	Log.e(TAG, "[MyReceiver]" + intent.getAction() +" connected state change to "+connected);
        } else {
        	Log.d(TAG, "[MyReceiver] Unhandled intent - " + intent.getAction());
        }
	}

	// 打印所有的 intent extra 数据
	private static String printBundle(Bundle bundle) {
		StringBuilder sb = new StringBuilder();
		for (String key : bundle.keySet()) {
			if (key.equals(JPushInterface.EXTRA_NOTIFICATION_ID)) {
				sb.append("\nkey:" + key + ", value:" + bundle.getInt(key));
			}else if(key.equals(JPushInterface.EXTRA_CONNECTION_CHANGE)){
				sb.append("\nkey:" + key + ", value:" + bundle.getBoolean(key));
			} 
			else {
				sb.append("\nkey:" + key + ", value:" + bundle.getString(key));
			}
		}
		return sb.toString();
	}
	
	//send msg to MainActivity
	private void processCustomMessage(Context context, Bundle bundle) {
//		if (MainActivity.isForeground) {
//			String message = bundle.getString(JPushInterface.EXTRA_MESSAGE);
//			String extras = bundle.getString(JPushInterface.EXTRA_EXTRA);
//			Intent msgIntent = new Intent(MainActivity.MESSAGE_RECEIVED_ACTION);
//			msgIntent.putExtra(MainActivity.KEY_MESSAGE, message);
//			if (!JpushUtil.isEmpty(extras)) {
//				try {
//					JSONObject extraJson = new JSONObject(extras);
//					if (null != extraJson && extraJson.length() > 0) {
//						msgIntent.putExtra(MainActivity.KEY_EXTRAS, extras);
//					}
//				} catch (JSONException e) {
//
//				}
//
//			}
//			context.sendBroadcast(msgIntent);
//		}
	}
}
