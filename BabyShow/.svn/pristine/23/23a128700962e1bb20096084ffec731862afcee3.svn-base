package com.yyqq.babyshow.wxapi;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;

import com.tencent.mm.sdk.modelbase.BaseReq;
import com.tencent.mm.sdk.modelbase.BaseResp;
import com.tencent.mm.sdk.openapi.IWXAPI;
import com.tencent.mm.sdk.openapi.IWXAPIEventHandler;
import com.tencent.mm.sdk.openapi.WXAPIFactory;
import com.yyqq.babyshow.R;
import com.yyqq.code.business.UserOderList;
import com.yyqq.code.toyslease.ToysLeaseMainAllActivity;
import com.yyqq.code.toyslease.ToysLeaseDetailActivity;
import com.yyqq.code.toyslease.ToysLeaseMainTabActivity;
import com.yyqq.code.toyslease.ToysLeaseTestActivity;
import com.yyqq.code.toyslease.ToysLeaseOrderDetailActivity;
import com.yyqq.code.toyslease.ToysLeaseOrderConfirmActivity;
import com.yyqq.framework.application.Constants;

public class WXPayEntryActivity extends Activity implements IWXAPIEventHandler {

	private static final String TAG = "WXPayEntryActivity";

	private IWXAPI api;
	private Activity context;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.pay_result);
		context = this;
		// ab = AbHttpUtil.getInstance(context);
		api = WXAPIFactory.createWXAPI(this, Constants.APP_ID);

		api.handleIntent(getIntent(), this);
	}

	@Override
	protected void onNewIntent(Intent intent) {
		super.onNewIntent(intent);
		setIntent(intent);
		api.handleIntent(intent, this);
	}

	// private AbHttpUtil ab;

	// public void toPay() {
	// AbRequestParams params = new AbRequestParams();
	// params.put("login_user_id", Config.getUser(context).uid);
	// params.put("order_id", Constants.order_id);
	// params.put("payment", "2");
	// params.put("price", Constants.price);
	// // Log.e(TAG, ServerMutualConfig.PayOrder + "&" + params.toString());
	// ab.setTimeout(5000);
	// ab.get(ServerMutualConfig.PayOrder + "&" + params.toString(),
	// new AbStringHttpResponseListener() {
	//
	// @Override
	// public void onSuccess(int statusCode, String content) {
	// super.onSuccess(statusCode, content);
	// Intent intent = new Intent();
	// intent.setClass(context, UserOderList.class);
	// startActivity(intent);
	// context.finish();
	// }
	//
	// @Override
	// public void onFinish() {
	// super.onFinish();
	// }
	//
	// @Override
	// public void onFailure(int statusCode, String content,
	// Throwable error) {
	// super.onFailure(statusCode, content, error);
	// }
	//
	// @Override
	// public void sendSuccessMessage(int statusCode,
	// String content) {
	// super.sendSuccessMessage(statusCode, content);
	// }
	//
	// });
	// }

	@Override
	public void onReq(BaseReq req) {
	}

	@Override
	public void onResp(BaseResp resp) {
		// Log.d(TAG, "onPayFinish, errCode = " + resp.errCode);
		if (BaseResp.ErrCode.ERR_OK == resp.errCode) {// 成功
			// toPay();
			Toast.makeText(context, "支付成功", 0).show();
			if(null != ToysLeaseOrderConfirmActivity.payFrom){
				if(ToysLeaseOrderConfirmActivity.payFrom.equals("weixin")){
					
					if(null != ToysLeaseOrderDetailActivity.toysLeaseOrderDetailActivity){
						ToysLeaseOrderDetailActivity.toysLeaseOrderDetailActivity.finish();
					}
					
					if(null != ToysLeaseMainAllActivity.toysLeaseMainActivity){
						ToysLeaseMainAllActivity.toysLeaseMainActivity.finish();
					}
					
					if(null != ToysLeaseTestActivity.toysLeaseMainTextActivity){
						ToysLeaseTestActivity.toysLeaseMainTextActivity.finish();
					}
					
					if(null != ToysLeaseDetailActivity.toysLeaseDetailActivity){
						ToysLeaseDetailActivity.toysLeaseDetailActivity.finish();
					}
					
					if(null != ToysLeaseMainTabActivity.toysLeaseMainTabActivity){
						ToysLeaseMainTabActivity.toysLeaseMainTabActivity.finish();
					}
					
					Intent intent = new Intent(context, ToysLeaseMainTabActivity.class);
					intent.putExtra("order_id", ToysLeaseOrderConfirmActivity.order_id);
					startActivity(intent);
					
					if(null != ToysLeaseOrderConfirmActivity.toysLeasePayActivity){
						ToysLeaseOrderConfirmActivity.toysLeasePayActivity.finish();
					}
					
					context.finish();
				}else{
					Intent intent = new Intent();
					intent.putExtra("showPacket", "showPacket");
					intent.setClass(context, UserOderList.class);
					startActivity(intent);
					context.finish();
				}
			}else{
				Intent intent = new Intent();
				intent.putExtra("showPacket", "showPacket");
				intent.setClass(context, UserOderList.class);
				startActivity(intent);
				context.finish();
			}
		} else if (BaseResp.ErrCode.ERR_USER_CANCEL == resp.errCode) {
			Toast.makeText(context, "取消支付", 0).show();
			context.finish();
		} else {
			Toast.makeText(context, "支付失败，请重新支付", 1).show();
			context.finish();
		}
	}

}